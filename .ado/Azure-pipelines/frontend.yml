trigger:
  branches:
    include:
      - main

jobs:
- job: Build
  displayName: 'Build Job'
  pool:
    vmImage: 'ubuntu-latest'

  workspace:
    clean: all

  strategy:
    matrix:
      NodeJS_21_x:
        node_version: '21.x'

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)
    displayName: 'Install Node.js'

  - script: |
      npm ci
    displayName: 'Install dependencies'
    workingDirectory: frontend

  - script: |
      npm run build
    displayName: 'Build React app'
    env:
      NODE_ENV: latest
    workingDirectory: frontend

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: 'frontend/dist'
      artifactName: 'dtcompanion_frontend'
      publishLocation: 'Container'
    displayName: 'Upload build artifact'

- job: Deploy
  displayName: 'Deploy Job'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  pool:
    vmImage: 'ubuntu-latest'
  environment: 'production'  # Specify the environment with approval gates

  steps:
  - download: current
    artifact: dtcompanion_frontend
    displayName: 'Download build artifact'

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'your-azure-subscription-id'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az login --service-principal -u $(AZURE_CLIENT_ID) -p $(AZURE_CLIENT_SECRET) --tenant $(AZURE_TENANT_ID)
        az storage blob upload-batch -s $(System.DefaultWorkingDirectory)/dtcompanion_frontend -d '$web' --account-name dtcfrontend --overwrite
    displayName: 'Upload to Azure Blob Storage'
    env:
      AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
      AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
      AZURE_TENANT_ID: $(AZURE_TENANT_ID)
